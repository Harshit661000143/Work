<project-wizard>
	<_name>Intel OpenCL C++</_name>
	<_description>Intel OpenCL project template</_description>
	<icon>intelopencl.png</icon>
	<category>C++</category>
	<required-program>automake</required-program>
	<required-program>autoconf</required-program>
	<required-program>make</required-program>
</project-wizard>

<page name="basic" _label="Basic information" _description="General Project Information">
	<property type="string" name="Name" _label="Project Name:" _description="project name" default="foobar-cpp" summary="yes" restriction="filename" mandatory="yes"/>
	<property type="string" name="Author" _label="Author:" _description="" default="[+UserName+]" mandatory="yes"/>
	<property type="string" name="Email" _label="Email address:" _description="" default="[+EmailAddress+]" mandatory="no"/>
	<property type="string" name="Version" _label="Version:" default="0.1" mandatory="yes"/>
	<property type="directory" name="Intel_SDK_Path" _label="Intel SDK Path:" _description="" default="[+HomeDirectory+]" mandatory="yes" exist="yes" restriction="directory" summary="yes"/>
</page>

<page name="options" _label="Project options" _description="Options for project build system">
	<property type="directory" name="Destination" _label="Destination:" _description="" default="[+(get "Intel_SDK_Path")+]/[+Name+]" mandatory="yes" exist="no" restriction="directory" summary="yes"/>
	<property type="list" name="License" _label="License" _description="Select code license" default="GPL" editable="no">
		<item name="GPL" _label="General Public License (GPL)"/>
		<item name="LGPL" _label="Lesser General Public License (LGPL)"/>
		<item name="BSD" _label="Berkeley Software Distribution License (BSD)"/>
		<item name="None" _label="No license"/>
	</property>
	<property type="hidden" name="NameUpper" default="[+(string-upcase (get "Name"))+]"/>
	<property type="hidden" name="NameLower" default="[+(string-downcase (get "Name"))+]"/>
	<property type="hidden" name="NameCUpper" default="[+(string->c-name! (string-substitute (string-upcase (get "Name")) " " "_"))+]"/>
	<property type="hidden" name="NameCLower" default="[+(string->c-name! (string-substitute (string-downcase (get "Name")) " " "_"))+]"/>
	<property type="hidden" name="NameHLower" default="[+(string-substitute (string->c-name! (string-downcase (get "Name"))) " " "-")+]"/>
	<property type="boolean" name="HaveSharedlib" _label="Add shared library support:" _description="Adds support for building shared libraries in your project" default="1"/>
	<property type="boolean" name="HaveI18n" _label="Add internationalization:" _description="Adds support for internationalization so that your project can have translations in different languages" default="1"/>
	<property type="boolean" name="HavePackage" _label="Configure external packages:" _description="Use pkg-config to add library support from other packages" default="0"/>
</page>

[+IF (=(get "HavePackage") "1")+]
<page name="packages" _label="Configure external packages" _description="Configure external packages">
	<property type="string" name="PackageModule1" _label="Require Package:" _description="Give a package name that your project require. You may also mention what is the required version of the package. For example, 'libgnomeui-2.0' or 'libgnomeui-2.0 &gt;= 2.2.0'" mandatory="yes"/>
	<property type="string" name="PackageModule2" _label="Require Package:" _description="Give a package name that your project require. You may also mention what is the required version of the package. For example, 'libgnomeui-2.0' or 'libgnomeui-2.0 &gt;= 2.2.0'"/>
	<property type="string" name="PackageModule3" _label="Require Package:" _description="Give a package name that your project require. You may also mention what is the required version of the package. For example, 'libgnomeui-2.0' or 'libgnomeui-2.0 &gt;= 2.2.0'"/>
	<property type="string" name="PackageModule4" _label="Require Package:" _description="Give a package name that your project require. You may also mention what is the required version of the package. For example, 'libgnomeui-2.0' or 'libgnomeui-2.0 &gt;= 2.2.0'"/>
	<property type="string" name="PackageModule5" _label="Require Package:" _description="Give a package name that your project require. You may also mention what is the required version of the package. For example, 'libgnomeui-2.0' or 'libgnomeui-2.0 &gt;= 2.2.0'"/>
</page>
[+ENDIF+]

<content>
	<directory source="intelcpp_cl" destination="[+Destination+]">
		<file source="AUTHORS"/>
		<file source="ChangeLog"/>
		<file source="Makefile.am.tpl" destination="Makefile.am"/>
		<file source="NEWS"/>
		<file source="README"/>
		<file source="autogen.sh" executable="yes"/>
		<file destination="[+NameHLower+].anjuta" source="project.anjuta"/>
		<file source="cvsignore" destination=".cvsignore"/>
		[+IF (=(get "HaveI18n") "1") +]
		<directory source="po">
			<file source="ChangeLog"/>
			<file source="LINGUAS" />
			<file source="cvsignore" destination=".cvsignore"/>
		</directory>
		[+ENDIF+]
	        <file source="configure.ac.tpl" destination="configure.ac"/>
		<directory source="src">
			<file source="cvsignore" destination=".cvsignore"/>
			<file source="main.cpp.tpl" destination="main.cpp"/>
			<file source="Makefile.am.tpl" destination="Makefile.am"/>
		</directory>
		[+IF (=(get "HaveI18n") "1")+]
		<directory source="po">
			<file source="POTFILES.in"/>
		</directory>
		[+ENDIF+]
	</directory>
	<directory source="licenses" destination="[+Destination+]">
		<file source="[+License+]" destination="COPYING"/>	
	</directory>
	<directory source="minimal" destination="[+Destination+]">
		<directory source="." destination=".anjuta">
			<directory source="." destination="session">
				<file source="anjuta.session"/>
			</directory>
		</directory>
	</directory>
</content>


<action>
	<open file="[+Destination+]/[+NameHLower+].anjuta"/>
</action>
